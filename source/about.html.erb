<!-- <div class="obj">
	<iframe id="vs_iframe" src="http://www.viewstl.com/?embedded&rotation=no&clean=yes&noborder=yes&orientation=bottom&bgcolor=white&color=gray&url=https://github.com/Stan83W/final-landing/raw/master/source/images/Augustus.stl" style="border:0;margin:0;width:100%;"></iframe>
</div> -->


<script src="http://threejs.org/build/three.min.js"></script>

<script src="http://threejs.org/examples/js/loaders/STLLoader.js"></script>
<!-- <script>
var camera, scene, renderer;
var geometry, material, mesh;

init();
animate();

function init() {

	camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 0.01, 10 );
	camera.position.z = 1;

	scene = new THREE.Scene();

	geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );
	material = new THREE.MeshNormalMaterial();

	mesh = new THREE.Mesh( geometry, material );
	scene.add( mesh );

	// renderer = new THREE.WebGLRenderer( { antialias: true } );
	renderer = new THREE.WebGLRenderer( { alpha: true } );
	renderer.setClearColor( 0x000000, 0 );
	renderer.setSize( window.innerWidth, window.innerHeight );
	document.body.appendChild( renderer.domElement );

}

function animate() {

	requestAnimationFrame( animate );

	mesh.rotation.x += 0.01;
	mesh.rotation.y += 0.02;

	renderer.render( scene, camera );

}


var loader = new THREE.STLLoader();
 
loader.load('../images/hand.stl', function (geometry) {
  var material = new THREE.MeshNormalMaterial()
  var mesh = new THREE.Mesh(geometry, material)
  scene.add(mesh)
})

</script> -->
<script src="Babylon.js"></script>
<script src="babylon.stlFileLoader.js"></script>
<script>
	var delayCreateScene = function () {
	    // Create a scene.
	    var scene = new BABYLON.Scene(engine);

	    // Create a default skybox with an environment.
	    var hdrTexture = BABYLON.CubeTexture.CreateFromPrefilteredData("textures/environment.dds", scene);
	    var currentSkybox = scene.createDefaultSkybox(hdrTexture, true);

	    // Append glTF model to scene.
	    BABYLON.SceneLoader.Append("scenes/BoomBox/", "BoomBox.gltf", scene, function (scene) {
	        // Create a default arc rotate camera and light.
	        scene.createDefaultCameraOrLight(true, true, true);

	        // The default camera looks at the back of the asset.
	        // Rotate the camera by 180 degrees to the front of the asset.
	        scene.activeCamera.alpha += Math.PI;
	    });

	    return scene;
	};
</script>

<div class="infos">
	<div class="desc">
	  <h3>Art Director working in agencies and freelance with 7 years of experience across design, luxury and corporate communication.</h3>
	  <h2>Living and working in Paris, feel free to contact me</h2>
	  <h2><a href="mailto:stanislas.wiart@gmail.com" class="">stanislas.wiart@gmail.com</a></h2>
	</div>
</div>