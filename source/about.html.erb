<!-- <div class="obj">
	<iframe id="vs_iframe" src="http://www.viewstl.com/?embedded&rotation=no&clean=yes&noborder=yes&orientation=bottom&bgcolor=white&color=gray&url=https://github.com/Stan83W/final-landing/raw/master/source/images/Augustus.stl" style="border:0;margin:0;width:100%;"></iframe>
</div> -->


<script src="http://threejs.org/build/three.min.js"></script>

<script src="http://threejs.org/examples/js/loaders/STLLoader.js"></script>
<!-- 
<script>

            var container, camera, scene, renderer;

            init();
            animate();

            function init() {

                container = document.createElement( 'div' );
                document.body.appendChild( container );

                // renderer

                renderer = new THREE.WebGLRenderer( { antialias: true } );
                renderer.setSize( window.innerWidth, window.innerHeight );
                container.appendChild( renderer.domElement );

                // scene

                scene = new THREE.Scene();

                // camera

                camera = new THREE.PerspectiveCamera( 35, window.innerWidth / window.innerHeight, 1, 10000 );
                camera.position.set( 3, 0.5, 3 );
                scene.add( camera ); // required, because we are adding a light as a child of the camera

                // lights

                scene.add( new THREE.AmbientLight( 0x222222 ) );

                var light = new THREE.PointLight( 0xffffff, 0.8 );
                camera.add( light );

                // object

                var loader = new THREE.STLLoader();
                loader.load( './images/Augustus.stl', function ( geometry ) {

                    var material = new THREE.MeshPhongMaterial( { color: 0xff5533 } );

                    var mesh = new THREE.Mesh( geometry, material );

                    scene.add( mesh );

                } );

                window.addEventListener( 'resize', onWindowResize, false );

            }

            function onWindowResize() {

                camera.aspect = window.innerWidth / window.innerHeight;

                camera.updateProjectionMatrix();

                renderer.setSize( window.innerWidth, window.innerHeight );

            }

            function animate() {

                requestAnimationFrame( animate );

                render();

            }

            function render() {

                var timer = Date.now() * 0.0005;

                camera.position.x = Math.cos( timer ) * 5;
                camera.position.z = Math.sin( timer ) * 5;

                camera.lookAt( scene.position );

                renderer.render( scene, camera );

            }

</script> -->

<div class="infos">
	<div class="desc">
	  <h3>Art Director working in agencies and freelance with 7 years of experience across design, luxury and corporate communication.</h3>
	  <h2>Living and working in Paris, feel free to contact me</h2>
	  <h2><a href="mailto:stanislas.wiart@gmail.com" class="">stanislas.wiart@gmail.com</a></h2>
	</div>
</div>